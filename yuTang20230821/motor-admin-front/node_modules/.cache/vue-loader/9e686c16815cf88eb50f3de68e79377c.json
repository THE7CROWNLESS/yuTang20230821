{"remainingRequest":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\src\\views\\profile\\index.vue?vue&type=style&index=0&id=9792f17c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\src\\views\\profile\\index.vue","mtime":1688954682000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1688952874000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1688954532000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1688953858000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1688954292000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688952586000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1688954532000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXV0aG9yLXByb2ZpbGUgewogIHBhZGRpbmc6IDMwcHggNDBweDsKCiAgLmVsLWZvcm0gewogICAgd2lkdGg6IDYwMHB4OwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/profile","sourcesContent":["<template>\n  <div class=\"author-profile\">\n    <el-form\n      ref=\"addForm\"\n      label-position=\"left\"\n      label-width=\"140px\"\n      :model=\"addForm\"\n      :rules=\"addRules\"\n    >\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"addForm.username\" placeholder=\"请输入用户名\" />\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input\n          type=\"password\"\n          v-model=\"addForm.password\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"确认密码\" prop=\"check_password\">\n        <el-input\n          type=\"password\"\n          v-model=\"addForm.check_password\"\n          autocomplete=\"off\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          style=\"width:100%;margin-bottom:50px;\"\n          type=\"primary\"\n          :loading=\"loading\"\n          :disabled=\"loading\"\n          @click=\"handleSubmit('addForm')\"\n          >保存</el-button\n        >\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { editAuthor } from \"@/api/user\";\nimport { validUsername, validPwd } from \"@/utils/validate\";\nexport default {\n  name: \"Login\",\n  data() {\n    const validateUsername = (rule, value, callback) => {\n      if (!validUsername(value)) {\n        callback(new Error(\"用户名由4~16位英文、数字、下划线组成\"));\n      } else {\n        callback();\n      }\n    };\n    // const validatePassword = (rule, value, callback) => {\n    //   if (!validPwd(value)) {\n    //     callback(new Error(\"密码由6~16位英文、数字、下划线组成\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n    var validatePass2 = (rule, value, callback) => {\n      //   if (value === \"\") {\n      //     callback(new Error(\"请再次输入密码\"));\n      //   } else\n      if (value !== this.addForm.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      addForm: {\n        id: \"\",\n        username: \"\",\n        password: \"\",\n        check_password: \"\"\n      },\n      addRules: {\n        username: [\n          {\n            required: true,\n            trigger: \"blur\",\n            validator: validateUsername\n          }\n        ],\n        // password: [\n        //   {\n        //     required: true,\n        //     trigger: \"blur\",\n        //     validator: validatePassword\n        //   }\n        // ],\n        check_password: [{ validator: validatePass2, trigger: \"blur\" }]\n      }\n    };\n  },\n  mounted() {\n    this.addForm.id = this.$store.state.user.adminInfo.id;\n    this.addForm.username = this.$store.state.user.adminInfo.username;\n  },\n  methods: {\n    handleSubmit(formName) {\n      this.loading = true;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.handlePost();\n        } else {\n          this.loading = false;\n        }\n      });\n    },\n    closeDialog() {\n      this.$refs.addForm.resetFields();\n    },\n    handlePost() {\n      editAuthor(this.addForm)\n        .then(res => {\n          this.$message.success(\"新增成功\");\n          this.$store.commit(\"user/SET_NAME\", this.addForm.username);\n        })\n        .catch(err => {\n          this.loading = false;\n          this.$message.error(\"新增失败\");\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.author-profile {\n  padding: 30px 40px;\n\n  .el-form {\n    width: 600px;\n  }\n}\n</style>\n"]}]}