{"remainingRequest":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\babel-loader\\lib\\index.js!D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\src\\views\\console\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\src\\views\\console\\index.vue","mtime":1688954680000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688952586000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1688952406000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688952586000},{"path":"D:\\ws_yutang\\yuTang20230821\\yuTang20230821\\motor-admin-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1688954532000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-alert\r\n      title=\"注意：\"\r\n      type=\"warning\"\r\n      description=\"直接发命令给设备，请谨慎使用；只能给运行中的设备发送命令；\"\r\n      :closable=\"false\"\r\n    />\r\n    <el-divider />\r\n\r\n    <div class=\"container\">\r\n      <el-form\r\n        ref=\"form\"\r\n        label-position=\"left\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"设备\" prop=\"id\">\r\n          <el-autocomplete\r\n            class=\"search-id-input\"\r\n            clearable\r\n            resize=\"vertical\"\r\n            v-model=\"form.id\"\r\n            value-key=\"value\"\r\n            :fetch-suggestions=\"querySearchAsync\"\r\n            placeholder=\"请输入设备的ID\"\r\n            @select=\"selectMachine\"\r\n            @clear=\"clearMachine\"\r\n          ></el-autocomplete>\r\n          <!-- <el-select\r\n            v-model=\"form.id\"\r\n            placeholder=\"请选择设备\"\r\n            clearable\r\n            filterable\r\n            @change=\"selectMachine\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in allMachines\"\r\n              :key=\"item.id\"\r\n              :label=\"item.machine_name + '  ( ' + item.IMEI + ' )'\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select> -->\r\n        </el-form-item>\r\n\r\n        <template v-if=\"currentMachineId\">\r\n          <el-form-item label=\"状态\">\r\n            <div\r\n              class=\"machineStatus\"\r\n              :class=\"{\r\n                green:\r\n                  currrentMachine.is_online == 1 && currrentMachine.status == 1\r\n              }\"\r\n            >\r\n              <span>{{ setMachineStatus(currrentMachine) }}</span>\r\n            </div>\r\n          </el-form-item>\r\n          <el-form-item\r\n            label=\"调试\"\r\n            v-if=\"\r\n              [1, 2, 3, '1', '2', '3'].includes(currrentMachine.machine_type)\r\n            \"\r\n          >\r\n            <div class=\"debugging-row\">\r\n              <el-button type=\"primary\" @click=\"handleDebug('0106A1060001')\"\r\n                >启动</el-button\r\n              >\r\n              <el-button type=\"danger\" @click=\"handleDebug('0106A1060000')\"\r\n                >停机</el-button\r\n              >\r\n              <el-button type=\"info\" @click=\"handlePass\">PASS</el-button>\r\n            </div>\r\n          </el-form-item>\r\n        </template>\r\n\r\n        <el-form-item label=\"命令\" prop=\"code\">\r\n          <el-input\r\n            v-model.trim=\"form.code\"\r\n            maxlength=\"30\"\r\n            clearable\r\n            placeholder=\"请输入30个以内的16进制的字符\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item class=\"submit-item\">\r\n          <el-button @click=\"resetForm('form')\">重置</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm('form')\">提交</el-button>\r\n        </el-form-item>\r\n\r\n        <!-- <el-form-item label=\"查询格式\">\r\n          <div class=\"table-tip\">0103+寄存器地址+0001</div>\r\n        </el-form-item> -->\r\n        <div class=\"table-tip\">查询格式：<i>0103 + 寄存器地址 + 0001</i></div>\r\n\r\n        <!-- <el-form-item label=\"寄存器地址表\"> -->\r\n        <div class=\"table-tip\">寄存器地址表 \"增氧机信息查询表\"</div>\r\n        <template>\r\n          <el-table class=\"search-table\" :data=\"searchTable\" border>\r\n            <el-table-column prop=\"addr\" label=\"寄存器地址\" align=\"center\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"名称\" align=\"center\">\r\n            </el-table-column>\r\n          </el-table>\r\n        </template>\r\n        <!-- </el-form-item> -->\r\n      </el-form>\r\n      <div class=\"revice\">\r\n        <div class=\"title\">\r\n          <span>信息接收显示区</span>\r\n        </div>\r\n        <div class=\"recevice-box\">\r\n          <ul>\r\n            <li\r\n              v-for=\"(item, index) of receviceNews\"\r\n              :key=\"index\"\r\n              :class=\"item.type\"\r\n            >\r\n              {{ item.msg }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getMachines } from \"@/api/machine\";\r\nimport { addCommand } from \"@/api/console\";\r\nimport mqtt from \"mqtt\";\r\nexport default {\r\n  data() {\r\n    var validateMacth = (rule, value, callback) => {\r\n      if (!this.currentMachineId) {\r\n        callback(new Error(\"没有找到这个ID的设备\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var validateType = (rule, value, callback) => {\r\n      const reg = /^[A-Za-z0-9]+$/;\r\n\r\n      if (!reg.test(value)) {\r\n        callback(new Error(\"命令必须是由数字和字母组成\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      filterMachines: [],\r\n      allMachines: [],\r\n      form: {\r\n        id: \"\",\r\n        code: \"\"\r\n      },\r\n      rules: {\r\n        id: [\r\n          {\r\n            required: true,\r\n            message: \"请选择设备\",\r\n            trigger: \"change\"\r\n          },\r\n          {\r\n            validator: validateMacth,\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        code: [\r\n          {\r\n            required: true,\r\n            message: \"请输入命令\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            min: 1,\r\n            max: 30,\r\n            message: \"长度在 1 到 30 个字符\",\r\n            trigger: \"blur\"\r\n          },\r\n          {\r\n            validator: validateType,\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      loading: false,\r\n      currentMachineId: \"\",\r\n      receviceNews: [],\r\n      client: null,\r\n      currentTime: \"\",\r\n      timeout: null,\r\n      searchTable: Object.freeze([\r\n        { addr: 7000, name: \"运行频率\" },\r\n        { addr: 7001, name: \"设定频率\" },\r\n        { addr: 7002, name: \"母线电压\" },\r\n        { addr: 7003, name: \"输出电压\" },\r\n        { addr: 7004, name: \"输出电流\" },\r\n        { addr: 7005, name: \"输出功率\" },\r\n        { addr: \"F00B\", name: \"载波频率\" },\r\n        { addr: \"FB00-FB07\", name: \"多段速\" }\r\n      ])\r\n    };\r\n  },\r\n  computed: {\r\n    currrentMachine() {\r\n      return this.allMachines.filter(x => x.id === this.currentMachineId)[0];\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n    this.createConnection();\r\n  },\r\n  beforeDestroy() {\r\n    this.client && this.client.end();\r\n  },\r\n  methods: {\r\n    handleDebug(debugCode) {\r\n      this.form.code = debugCode;\r\n    },\r\n    handlePass() {\r\n      this.$confirm(\r\n        \"将设备状态设为“入库”，请确认 开机和停机 功能正常\",\r\n        \"设置设备状态\",\r\n        {\r\n          distinguishCancelAndClose: true,\r\n          confirmButtonText: \"设置\",\r\n          cancelButtonText: \"取消\"\r\n        }\r\n      )\r\n        .then(() => {\r\n          this.setPassCode();\r\n        })\r\n        .catch(action => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已放弃设置\"\r\n          });\r\n        });\r\n    },\r\n    async setPassCode() {\r\n      let machineCode = this.form.id.split(\" \")[3];\r\n      const match = this.allMachines.find(x => {\r\n        return x.machine_code == machineCode;\r\n      });\r\n      let params = {\r\n        id: match.id,\r\n        code: \"pass\"\r\n      };\r\n      try {\r\n        await addCommand(params);\r\n        this.$message.success(\"设置成功\");\r\n      } catch (error) {\r\n        this.$message.error(\"设置失败\");\r\n      }\r\n    },\r\n    fetchData() {\r\n      getMachines({\r\n        page: 0\r\n        // keyword: \"\"\r\n      }).then(res => {\r\n        this.allMachines = res.data.map(x => {\r\n          x.value = `${x.machine_name}  ( ${x.machine_code} ) （ ${x.IMEI} ）`;\r\n          return x;\r\n        });\r\n      });\r\n    },\r\n    querySearchAsync(queryString, cb) {\r\n      var machines = this.allMachines;\r\n      var results = queryString\r\n        ? machines.filter(this.createStateFilter(queryString))\r\n        : machines;\r\n\r\n      clearTimeout(this.timeout);\r\n      this.timeout = setTimeout(() => {\r\n        cb(results);\r\n      }, 3000 * Math.random());\r\n    },\r\n    createStateFilter(queryString) {\r\n      return state => {\r\n        return (\r\n          state.machine_code\r\n            .toLowerCase()\r\n            .indexOf(queryString.toLowerCase()) === 0\r\n        );\r\n      };\r\n    },\r\n    submitForm(formName) {\r\n      this.loading = true;\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          if (this.currrentMachine.is_online == 0) {\r\n            this.$message.error(\"当前设备已离线，无法接收指令\");\r\n            return;\r\n          }\r\n          this.postData();\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    async postData() {\r\n      let machineCode = this.form.id.split(\" \")[3];\r\n      const match = this.allMachines.find(x => {\r\n        return x.machine_code == machineCode;\r\n      });\r\n      let params = {\r\n        id: match.id,\r\n        code: this.form.code\r\n      };\r\n      try {\r\n        await addCommand(params);\r\n        this.$message.success(\"提交成功\");\r\n        this.loading = false;\r\n        // 收发区\r\n        const timeFormat = this.getCurrent();\r\n        const sendcode = {\r\n          type: \"send\",\r\n          msg: `[${timeFormat}] 发送：${this.form.code}（校验位忽略）`\r\n        };\r\n        this.receviceNews.push(sendcode);\r\n      } catch (error) {\r\n        this.loading = false;\r\n        this.$message.error(\"提交失败\");\r\n      }\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    setMachineStatus(item) {\r\n      return item.is_online == 0\r\n        ? \"离线\"\r\n        : item.status == 1\r\n        ? \"运行\"\r\n        : item.status == 2\r\n        ? \"停机\"\r\n        : \"故障\";\r\n    },\r\n    selectMachine(item) {\r\n      this.currentMachineId = item.id;\r\n      this.receviceNews = [];\r\n    },\r\n    clearMachine() {\r\n      this.currentMachineId = \"\";\r\n      this.receviceNews = [];\r\n    },\r\n    // 创建mqtt连接\r\n    createConnection() {\r\n      const clientId =\r\n        \"mqttjs_\" +\r\n        Math.random()\r\n          .toString(16)\r\n          .substr(2, 8);\r\n\r\n      const host = \"ws://www.ecarboncn.com:8083/mqtt\";\r\n\r\n      const options = {\r\n        keepalive: 20,\r\n        clientId: clientId,\r\n        protocolId: \"MQTT\",\r\n        protocolVersion: 4,\r\n        clean: true,\r\n        reconnectPeriod: 1000,\r\n        connectTimeout: 30 * 1000,\r\n        username: \"ychjasp\",\r\n        password: \"821006\",\r\n        will: {\r\n          topic: \"WillMsg\",\r\n          payload: \"Connection Closed abnormally..!\",\r\n          qos: 0,\r\n          retain: false\r\n        },\r\n        rejectUnauthorized: false\r\n      };\r\n\r\n      console.log(\"connecting mqtt client\");\r\n      this.client = mqtt.connect(host, options);\r\n\r\n      this.client.on(\"error\", err => {\r\n        console.log(\"Connection error: \", err);\r\n        this.client.end();\r\n      });\r\n\r\n      this.client.on(\"reconnect\", () => {\r\n        console.log(\"Reconnecting...\");\r\n      });\r\n\r\n      this.client.on(\"connect\", () => {\r\n        console.log(\"Client connected:\" + clientId);\r\n        this.client.subscribe(\"/+/SET\", { qos: 0 });\r\n        // client.publish('testtopic', 'ws connection demo...!', { qos: 0, retain: false })\r\n      });\r\n\r\n      this.client.on(\"message\", (topic, message, packet) => {\r\n        console.log(\r\n          \"Received Message: \" + message.toString() + \"\\nOn topic: \" + topic\r\n        );\r\n        console.log(\"设备返回值：\", this.getRespone(message));\r\n        console.log(packet);\r\n        const receivedId = topic.split(\"/\")[1];\r\n        console.log(\r\n          \"设备返回信息的IMEI：\",\r\n          receivedId,\r\n          \"当前设备的IMEI：\",\r\n          this.currrentMachine?.IMEI\r\n        );\r\n        console.log(\"xx\", receivedId == this.currrentMachine?.IMEI);\r\n\r\n        if (receivedId == this.currrentMachine?.IMEI) {\r\n          const timeFormat = this.getCurrent();\r\n          const resp = this.getRespone(message);\r\n          const recev = {\r\n            type: \"recev\",\r\n            msg: `[${timeFormat}] 接收：${resp}`\r\n          };\r\n          this.receviceNews.push(recev);\r\n        }\r\n      });\r\n\r\n      this.client.on(\"close\", () => {\r\n        console.log(clientId + \" disconnected\");\r\n      });\r\n    },\r\n    getCurrent() {\r\n      const now = new Date();\r\n      let hh = now.getHours();\r\n      let mm = now.getMinutes();\r\n      let ss = now.getSeconds();\r\n      hh = hh > 9 ? hh : `0${hh}`;\r\n      mm = mm > 9 ? mm : `0${mm}`;\r\n      ss = ss > 9 ? ss : `0${ss}`;\r\n      return `${hh}:${mm}:${ss}`;\r\n    },\r\n    getRespone(res) {\r\n      const array = new Uint8Array(res);\r\n      let str = \"\";\r\n      for (var i = 0; i < array.length; i++) {\r\n        var tmp = array[i].toString(16);\r\n        if (tmp.length === 1) {\r\n          tmp = \"0\" + tmp;\r\n        }\r\n        str += \" \" + tmp;\r\n      }\r\n      str = str.toUpperCase().trim();\r\n      return str;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.container {\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: space-around;\r\n}\r\n.el-form {\r\n  width: 460px;\r\n\r\n  .el-select {\r\n    width: 100%;\r\n  }\r\n\r\n  .submit-item {\r\n    margin-top: 50px;\r\n  }\r\n}\r\n\r\n.revice {\r\n  width: 460px;\r\n  min-height: 300px;\r\n  .title {\r\n    font-size: 16px;\r\n    padding-bottom: 16px;\r\n  }\r\n\r\n  .recevice-box {\r\n    width: 500px;\r\n    padding: 0 20px 0 0;\r\n    height: 240px;\r\n    overflow-y: auto;\r\n    border: 1px solid #f2f2f2;\r\n    li {\r\n      font-size: 14px;\r\n      line-height: 20px;\r\n    }\r\n    .recev {\r\n      color: green;\r\n    }\r\n    .send {\r\n      color: red;\r\n    }\r\n  }\r\n}\r\n.machineStatus {\r\n  color: red;\r\n  font-weight: 800;\r\n  &.green {\r\n    color: green;\r\n  }\r\n}\r\n\r\n.search-id-input {\r\n  width: 360px;\r\n}\r\n\r\n.table-tip {\r\n  font-size: 14px;\r\n  color: #475569;\r\n  padding: 10px;\r\n\r\n  i {\r\n    color: #1e293b;\r\n    font-weight: bold;\r\n  }\r\n}\r\n.search-table {\r\n  min-height: auto;\r\n  padding-bottom: 10px 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/console"}]}